[{"/home/alins_no1/Documents/full_stack_open/part2/countries/src/index.js":"1","/home/alins_no1/Documents/full_stack_open/part2/countries/src/App.js":"2"},{"size":408,"mtime":1609217565763,"results":"3","hashOfConfig":"4"},{"size":1518,"mtime":1609226982707,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"1yzax3a",{"filePath":"9","messages":"10","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"/home/alins_no1/Documents/full_stack_open/part2/countries/src/index.js",[],["12","13"],"/home/alins_no1/Documents/full_stack_open/part2/countries/src/App.js",["14","15"],"import React, { useState } from 'react'\n\nconst Search = ({ changeHandler }) =>\n  <div>\n    find countries\n    <input onChange={changeHandler} />\n  </div>\n\nconst Result = ({ searchResult, onShowClicked }) => {\n  const len = searchResult.length\n  if (len == 1) {\n    const country = searchResult[0]\n   \n    return <div>\n      <h1>{country.name}</h1>\n      <p>capital {country.capital}</p>\n      <p>population {country.population}</p>\n      <h2>languages</h2>\n      <ul>\n        {country.languages.map(\n          (language, id) => <li key={id}>{language.name}</li>\n        )}\n      </ul>\n      <img src={country.flag} height=\"100\" />\n    </div>\n  } else if (len <= 10)\n    return <div>\n      {searchResult.map((country, id) => \n        <p key={id}>\n          {country.name}\n          <button onClick={onShowClicked(country.name)}>show</button>\n        </p>\n      )}\n    </div>\n  else\n    return <p>Too many matches, specify another filter</p>\n}\n\nfunction App({ countries }) {\n  const [ pattern, setPattern ] = useState('')\n  const onChangeHandler = (event) => {\n    setPattern(event.target.value.toLowerCase())\n  }\n\n  const onShowClicked = (name) => () => {\n    setPattern(name.toLowerCase())\n  }\n\n  var searchResult =\n    pattern === ''\n    ? countries\n    : countries.filter(\n        country => country.name.toLowerCase().indexOf(pattern) >= 0\n    )\n  \n  return <div>\n    <Search changeHandler={onChangeHandler} />\n    <Result searchResult={searchResult} onShowClicked={onShowClicked}/>\n  </div>\n}\n\nexport default App;\n",{"ruleId":"16","replacedBy":"17"},{"ruleId":"18","replacedBy":"19"},{"ruleId":"20","severity":1,"message":"21","line":11,"column":11,"nodeType":"22","messageId":"23","endLine":11,"endColumn":13},{"ruleId":"24","severity":1,"message":"25","line":24,"column":7,"nodeType":"26","endLine":24,"endColumn":46},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]